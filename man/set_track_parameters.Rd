% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/track_interface.R
\docType{methods}
\name{set_track_parameters}
\alias{set_track_parameters}
\alias{set_track_parameters,character-method}
\title{set_track_parameters}
\usage{
\S4method{set_track_parameters}{character}(object, annotation = NULL,
  track_names = if (!is.null(names(object))) names(object) else
  basename(object), groups = track_names, share_y = TRUE,
  showlegend = TRUE, colors = NULL, fill = c("tozeroy", "none"),
  mode = "lines", annotation_position = c("bottom", "top"),
  annotation_size = 0.25, summary = NULL, layout = list())
}
\arguments{
\item{object}{vector of bam or bigwig file names}

\item{annotation}{TxDb or OrganismDb object}

\item{track_names}{names to associate with each file}

\item{groups}{vector of group assignments.  traces will be grouped onto 
subplots
based on group assignments (if only showing 1 region)}

\item{share_y}{share the y axis?}

\item{showlegend}{show the legend?}

\item{colors}{colors for each bam file}

\item{fill}{fillmode for line plot}

\item{mode}{mode for plot}

\item{annotation_position}{plot annotations on bottom or on top of signal 
traces}

\item{annotation_size}{relative size of annotation plot}

\item{summary}{Summary parameters from \code{\link{set_summary_parameters}}}

\item{layout}{list of additional plotly layout arguments}

\item{...}{additional arguments}
}
\value{
function to make interactive track plots
}
\description{
Setup parameters for plotting coverage signals along genome tracks.
Result from this function can be passed to \code{\link{plot_tracks}}
}
\examples{

library(GenomicRanges)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)

## First we'll read in some sample data
genomation_dir <- system.file("extdata", package = "genomationData")
samp.file <- file.path(genomation_dir,'SamplesInfo.txt')
samp.info <- read.table(samp.file, header=TRUE, sep="\\t", 
                        stringsAsFactors = FALSE)
samp.info$fileName <- file.path(genomation_dir, samp.info$fileName)
ctcf.peaks = genomation::readBroadPeak(system.file("extdata",
                         "wgEncodeBroadHistoneH1hescCtcfStdPk.broadPeak.gz",
                          package = "genomationData"))
ctcf.peaks = ctcf.peaks[seqnames(ctcf.peaks) == "chr21"]

## resize peaks to size 1000
ctcf.peaks = resize(ctcf.peaks, width = 10000, fix = "center")

## Make track plotter

track_params <- set_track_parameters(samp.info$fileName[1:3], 
  annotation = TxDb.Hsapiens.UCSC.hg19.knownGene, 
  track_names = samp.info$sampleName[1:3] , 
  share_y = TRUE)
  
if (interactive()){
  plot_tracks(ctcf.peaks[1], track_params)
  plot(ctcf.peaks[1:3], track_params)
}   

}
\author{
Alicia Schep and Justin Finkle
}
